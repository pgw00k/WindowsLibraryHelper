#pragma once

#include "DLLExport.h"

#define TO_STRING(x) #x

// 声明一个函数指针
#define FUN_POINTER(FUNCTION_NAME,RETURN_TYPE,...)\
typedef RETURN_TYPE(*FUNCTION_NAME##_Type)(__VA_ARGS__);\
FUNCTION_NAME##_Type Real##FUNCTION_NAME = NULL

// 声明一个Windows中的系统函数，不可以直接导出，需要借助DEF文件进行导出
#define DUMMY_WINFUN_EXPORT(FUNCTION_NAME,RETURN_TYPE,...)\
FUN_POINTER(FUNCTION_NAME, RETURN_TYPE, __VA_ARGS__); \
RETURN_TYPE FUNCTION_NAME(__VA_ARGS__)

// 声明一个导出函数
#define DUMMY_EXPORT(FUNCTION_NAME,RETURN_TYPE,...)\
FUN_POINTER(FUNCTION_NAME,RETURN_TYPE,__VA_ARGS__);\
DLLEXPORT RETURN_TYPE FUNCTION_NAME(__VA_ARGS__)

#define DUMMY_IMPORT(MODULE,FUNCTION_NAME)\
Real##FUNCTION_NAME = (FUNCTION_NAME##_Type) GetProcAddress(MODULE, #FUNCTION_NAME)

#define DUMMY_EXPORT_AW(FUNCTION_NAME,RETURN_TYPE,...)\
typedef RETURN_TYPE(*FUNCTION_NAME##_Type)(__VA_ARGS__);\
FUNCTION_NAME##_Type Real##FUNCTION_NAME##A = NULL;\
FUNCTION_NAME##_Type Real##FUNCTION_NAME##W = NULL;\
RETURN_TYPE FUNCTION_NAME##A(__VA_ARGS__);\
RETURN_TYPE FUNCTION_NAME##W(__VA_ARGS__)

#define DUMMY_IMPORT_AW(MODULE,FUNCTION_NAME)\
Real##FUNCTION_NAME##A = (FUNCTION_NAME##_Type) GetProcAddress(MODULE, TO_STRING(FUNCTION_NAME##A));\
Real##FUNCTION_NAME##W = (FUNCTION_NAME##_Type) GetProcAddress(MODULE, TO_STRING(FUNCTION_NAME##W))